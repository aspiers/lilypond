@c -*- coding: utf-8; mode: texinfo; documentlanguage: de -*-
@ignore
    Translation of GIT committish: 8cbb38db1591ab95a178643e7bf41db018aa22c0

    When revising a translation, copy the HEAD committish of the
    version that you are working on.  For details, see the Contributors'
    Guide, node Updating translation committishes..
@end ignore

@c \version "2.14.0"

@c Translators: Till Paala

@node Anmerkungen
@section Anmerkungen
@translationof Editorial annotations

@lilypondfile[quote]{editorial-headword.ly}

Dieser Abschnitt zeigt die verschiedenen Möglichkeiten, die
Erscheinung der Noten zu ändern und analytische bzw. pädagogische
Anmerkungen anzubringen.

@menu
* Innerhalb des Systems::
* Außerhalb des Notensystems::
@end menu


@node Innerhalb des Systems
@subsection Innerhalb des Systems
@translationof Inside the staff

Dieser Abschnitt zeigt, wie man Elemente hervorhebt, die sich
innerhalb des Notensystems befinden.

@menu
* Auswahl der Notations-Schriftgröße::
* Fingersatzanweisungen::
* Unsichtbare Noten::
* Farbige Objekte::
* Klammern::
* Hälse::
@end menu

@node Auswahl der Notations-Schriftgröße
@unnumberedsubsubsec Auswahl der Notations-Schriftgröße
@translationof Selecting notation font size

@cindex Font, Größe ändern für Notation
@cindex Schriftgröße (Notation) ändern
@cindex Auswahl von Schriftgröße (Notation)
@cindex Noten, Schriftgröße
@cindex Notenköpfe
@funindex fontSize
@funindex font-size
@funindex magstep
@funindex \huge
@funindex \large
@funindex \normalsize
@funindex \small
@funindex \tiny
@funindex \teeny
@funindex huge
@funindex large
@funindex normalsize
@funindex small
@funindex tiny
@funindex teeny

Die Schriftgröße von Notationselementen kann geändert werden.
Damit wird allerdings nicht die Größe von veränderlichen
Symbolen, wie Balken oder Bögen, geändert.

@warning{Für Schriftgröße von Text, siehe
@ref{Überblick über die wichtigsten Textbeschriftungsbefehle}.}

@lilypond[verbatim,quote,relative=2]
\huge
c4.-> d8---3
\large
c4.-> d8---3
\normalsize
c4.-> d8---3
\small
c4.-> d8---3
\tiny
c4.-> d8---3
\teeny
c4.-> d8---3
@end lilypond

Intern wird hiermit die @code{fontSize}-Eigenschaft gesetzt.  Sie
wird für alle Layout-Objekte definiert.  Der Wert von
@code{font-size} ist eine Zahl, die die Größe relativ zur Standardgröße
für die aktuelle Systemhöhe angibt.  Jeder Vergrößerungsschritt bedeutet
etwa eine Vergrößerung um 12% der Schriftgröße.  Mit sechs Schritten wird
die Schriftgröße exakt verdoppelt.  Die Scheme-Funktion @code{magstep}
wandelt einen Wert von @code{font-size} in einen Skalierungsfaktor um.
Die @code{font-size}-Eigenschaft kann auch direkt gesetzt werden, so dass
sie sich nur auf bestimmte Layoutobjekte bezieht.

@lilypond[verbatim,quote,relative=2]
\set fontSize = #3
c4.-> d8---3
\override NoteHead #'font-size = #-4
c4.-> d8---3
\override Script #'font-size = #2
c4.-> d8---3
\override Stem #'font-size = #-5
c4.-> d8---3
@end lilypond

@cindex Standard-Schriftgröße (Notation)
@cindex Schriftgröße (Notation), Standard
@funindex font-interface
@funindex font-size

Schriftgrößenänderungen werden erreicht, indem man die Design-Schriftgröße
nimmt, die der gewünschten am nächsten kommt, und sie dann skaliert.  Die
Standard-Schriftgröße (für @code{font-size = #0}) hängt von der
Standard-Systemhöhe ab. Für ein Notensystem von 20pt wird eine Schriftgröße
von 10pt ausgewählt.

Die @code{font-size}-Eigenschaft kann nur für die Layoutobjekte gesetzt
werden, die Schrift-Dateien benutzen.  Das sind die, welche die
@code{font-interface}-Layoutschnittstelle unterstützen.


@predefined
@code{\teeny},
@code{\tiny},
@code{\small},
@code{\normalsize},
@code{\large},
@code{\huge}.
@endpredefined

@seealso
Schnipsel:
@rlsr{Editorial annotations}.

Referenz der Interna:
@rinternals{font-interface}.


@node Fingersatzanweisungen
@unnumberedsubsubsec Fingersatzanweisungen
@translationof Fingering instructions

@cindex Fingersatz
@cindex Fingerwechsel
@cindex Griff: Fingersatz
@funindex \finger
@funindex finger

Fingersatzanweisungen können folgenderweise notiert werden:
@samp{Note}-@var{Zahl}

@lilypond[verbatim,quote,relative=2]
c4-1 d-2 f-4 e-3
@end lilypond

Für Fingerwechsel muss eine Textbeschriftung (markup) benutzt werden:

@lilypond[verbatim,quote,relative=2]
c4-1 d-2 f-4 c^\markup { \finger "2 - 3" }
@end lilypond

@cindex thumb-script
@cindex Fingersatz: Daumen-Zeichen
@funindex \thumb
@funindex thumb

Mit dem Daumen-Befehl (@code{\thumb}) können die Noten bezeichnet
werden, die mit dem
Daumen (etwa auf dem Cello) gespielt werden sollen.

@lilypond[verbatim,quote,relative=2]
<a_\thumb a'-3>2 <b_\thumb b'-3>
@end lilypond

@cindex Fingersatz: Akkorde
@cindex Akkorde: Fingersatz

Fingersätze für Akkorde können auch zu einzelnen Noten
hinzugefügt werden, indem sie innerhalb der Akkord-Klammer
direkt an die Noten angefügt werden.

@lilypond[verbatim,quote,relative=2]
<c-1 e-2 g-3 b-5>2 <d-1 f-2 a-3 c-5>
@end lilypond

Fingersatzanweisungen können manuell oberhalb des Systems gesetzt werden, siehe
@ref{Richtung und Platzierung}.

@snippets

@lilypondfile[verbatim,quote,ragged-right,texidoc,doctitle]
{controlling-the-placement-of-chord-fingerings.ly}

@lilypondfile[verbatim,quote,texidoc,doctitle]
{allowing-fingerings-to-be-printed-inside-the-staff.ly}

@lilypondfile[verbatim,quote,texidoc,doctitle]
{avoiding-collisions-with-chord-fingerings.ly}

@seealso
Notationsreferenz:
@ref{Richtung und Platzierung}.

Schnipsel:
@rlsr{Editorial annotations}.

Referenz der Interna:
@rinternals{FingeringEvent},
@rinternals{fingering-event},
@rinternals{Fingering_engraver},
@rinternals{New_fingering_engraver},
@rinternals{Fingering}.

@knownissues
Standardmäßig ist eine Zahl größer als 9 nicht unterstützt, wenn man die
Schreibweise @code{@var{Note}-@var{Zahl}} einsetzt.


@node Unsichtbare Noten
@unnumberedsubsubsec Unsichtbare Noten
@translationof Hidden notes

@cindex Noten verstecken
@cindex Verstecken von Noten
@cindex Noten, unsichtbar
@cindex unsichtbare Noten
@cindex durchsichtige Noten
@cindex Noten, durchsichtig
@cindex transparent, Noten
@funindex \hideNotes
@funindex hideNotes
@funindex \hideNote
@funindex hideNote
@funindex \unHideNotes
@funindex unHideNotes

Versteckte (oder unsichtbare oder transparente) Noten können sinnvoll sein,
wenn man Notation für den Theorieunterricht oder Kompositionsübungen
erstellen will.

@lilypond[verbatim,quote,relative=2]
c4 d
\hideNotes
e4 f
\unHideNotes
g a
\hideNote
b
c
@end lilypond

Notationsobjekte, die an die unsichtbaren Noten angefügt sind, sind weiterhin
sichtbar.

@lilypond[verbatim,quote,relative=2]
c4( d)
\hideNotes
e4(\p f)--
@end lilypond


@predefined
@code{\hideNotes},
@code{\unHideNotes}.
@endpredefined

@seealso
Handbuch zum Lernen:
@rlearning{Sichtbarkeit und Farbe von Objekten}.

Notationsreferenz:
@ref{Unsichtbare Pausen},
@ref{Sichtbarkeit von Objekten},
@ref{Systeme verstecken}.

Schnipsel:
@rlsr{Editorial annotations}.

Referenz der Interna:
@rinternals{Note_spacing_engraver},
@rinternals{NoteSpacing}.


@node Farbige Objekte
@unnumberedsubsubsec Farbige Objekte
@translationof Coloring objects

@cindex Objekte, farbig
@cindex Farbe
@cindex Einfärben von Objekten
@cindex Noten, farbig
@cindex farbige Noten
@cindex X11-Farben
@cindex with-color
@funindex color
@funindex \with-color
@funindex with-color
@funindex x11-color

Einzelnen Objekten können einfach eigene Farben zugewiesen werden.
Gültige Farben-Bezeichnungen sind aufgelistet in @ref{Liste der Farben}.

@lilypond[verbatim,quote,relative=2]
\override NoteHead #'color = #red
c4 c
\override NoteHead #'color = #(x11-color 'LimeGreen)
d
\override Stem #'color = #blue
e
@end lilypond

Die ganze Farbpalette, die für X11 definiert ist, kann mit der
Scheme-Funktion @code{x11-color} benutzt werden.  Diese Funktion
hat ein Argument: entweder ein Symbol in der Form @code{'@var{FooBar}}
oder eine Zeichenkette in der Form @code{"@var{FooBar}"}.  Die erste
Form ist schneller zu schreiben und effizienter.  Mit der zweiten
Form ist es allerdings möglich, auch Farbbezeichnungen einzusetzen,
die aus mehr als einem Wort bestehen.

Wenn @code{x11-color} die angegebene Farbbezeichnung nicht kennt, wird
Schwarz eingesetzt.

@lilypond[verbatim,quote,relative=2]
\override Staff.StaffSymbol #'color = #(x11-color 'SlateBlue2)
\set Staff.instrumentName = \markup {
  \with-color #(x11-color 'navy) "Clarinet"
}

gis8 a
\override Beam #'color = #(x11-color "medium turquoise")
gis a
\override Accidental #'color = #(x11-color 'DarkRed)
gis a
\override NoteHead #'color = #(x11-color "LimeGreen")
gis a
% this is deliberate nonsense; note that the stems remain black
\override Stem #'color = #(x11-color 'Boggle)
b2 cis
@end lilypond

@cindex RGB-Farbe
@cindex Farbe, RGB
@funindex rgb-color

Exakte RGB-Farben können mit Hilfe der Scheme-Funktion @code{rgb-color}
definiert werden.

@lilypond[verbatim,quote,relative=2]
\override Staff.StaffSymbol #'color = #(x11-color 'SlateBlue2)
\set Staff.instrumentName = \markup {
  \with-color #(x11-color 'navy) "Clarinet"
}

\override Stem #'color = #(rgb-color 0 0 0)
gis8 a
\override Stem #'color = #(rgb-color 1 1 1)
gis8 a
\override Stem #'color = #(rgb-color 0 0 0.5)
gis4 a
@end lilypond

@seealso
Notationsreferenz:
@ref{Liste der Farben}, @ref{Der tweak-Befehl}.

Schnipsel:
@rlsr{Editorial annotations}.

@cindex x11-Farbe
@cindex farbige Noten in Akkorden
@cindex Noten, farbige in Akkorden
@cindex Akkorde: farbige Noten
@funindex x11-color

@knownissues
Eine X11-Farbe hat nicht notwendigerweise exakt denselben Farbton wie
eine ähnlich genannte normale Farbe.

Nicht alle X11-Farben lassen sich am Webbrowser erkennen, d. h. der
Unterschied etwa zwischen @code{'LimeGreen} und @code{'ForestGreen} wird
eventuell nicht dargestellt.  Für die Benutzung im Internet wird
die Benutzung von einfachen Farben nahegelegt (z. B. @code{#blue},
@code{#green}, @code{#red}).

Noten in Akkorden können nicht mit @code{\override} eingefärbt werden,
dazu muss @code{\tweak} benutzt werden. Siehe auch @ref{Der tweak-Befehl}.



@node Klammern
@unnumberedsubsubsec Klammern
@translationof Parentheses

@cindex Geisternoten
@cindex Noten in Klammern
@cindex Klammern um Noten
@cindex editorische Noten
@funindex \parenthesize
@funindex parenthesize

Objekte können in Klammern gesetzt werden, indem vor ihnen der Befehl
@code{\parenthesize} geschrieben wird.  Wenn ein Akkord in Klammern gesetzt
wird, wirkt sich das auf jede Noten im Akkord aus.  Innerhalb von einem
Akkord gesetzte Befehle wirken sich auf einzelne Noten aus.

@lilypond[verbatim,quote,relative=2]
c2 \parenthesize d
c2 \parenthesize <c e g>
c2 <c \parenthesize e g>
@end lilypond

Auch andere Objekte als Noten können in Klammern gesetzt werden.
Wenn Artikulationszeichen in Klammern gesetzt werden sollen,
braucht man ein Minuszeichen vor dem @code{\parenthesize}-Befehl.

@lilypond[verbatim,quote,relative=2]
c2-\parenthesize -. d
c2 \parenthesize r
@end lilypond

@seealso
Schnipsel:
@rlsr{Editorial annotations}.

Referenz der Interna:
@rinternals{Parenthesis_engraver},
@rinternals{ParenthesesItem},
@rinternals{parentheses-interface}.

@knownissues

Wenn man einen Akkord einklammert, wird um jede Note eine eigene Klammer
gesetzt, anstatt den gesamten Akkord in eine große Klammer zu fassen.



@node Hälse
@unnumberedsubsubsec Hälse
@translationof Stems

@cindex Hals
@cindex Hals, unsichtbar
@cindex Notenhals, unsichtbar
@cindex unsichtbarer Notenhals
@cindex Hals, Richtung
@cindex Richtung von Notenhälsen
@cindex Notenhals, Richtung

@funindex \stemNeutral
@funindex \stemUp
@funindex \stemDown
@funindex stemNeutral
@funindex stemUp
@funindex stemDown

Immer, wenn das Programm eine Note findet, wird automatisch
ein Notenhals (@rinternals{Stem}) -Objekt erzeugt. Auch
für ganze Noten und Pausen werden sie erzeugt, aber unsichtbar
gemacht.

Hälse können manuell gesetzt werden, um nach oben oder unten zu
zeigen, siehe @ref{Direction and placement}.

@predefined
@code{\stemUp} (Hälse nach oben),
@code{\stemDown} (Hälse nach unten),
@code{\stemNeutral} (Hälse je nach Notenposition).
@endpredefined

@snippets

@cindex Hals, Richtung von
@cindex Notenhals, Richtung von
@cindex Hals nach oben
@cindex Hals nach unten
@cindex Hals neutral

@lilypondfile[verbatim,quote,ragged-right,texidoc,doctitle]
{default-direction-of-stems-on-the-center-line-of-the-staff.ly}

@seealso
Notationsreferenz:
@ref{Richtung und Platzierung}.

Schnipsel:
@rlsr{Editorial annotations}.

Referenz der Interna:
@rinternals{Stem_engraver},
@rinternals{Stem},
@rinternals{stem-interface}.



@node Außerhalb des Notensystems
@subsection Außerhalb des Notensystems
@translationof Outside the staff

Dieser Abschnitt zeigt, wie man Elemente im System von
außerhalb des Systems hervorhebt.

@menu
* Erklärungen in Ballonform::
* Gitternetzlinien::
* Analyseklammern::
@end menu

@node Erklärungen in Ballonform
@unnumberedsubsubsec Erklärungen in Ballonform
@translationof Balloon help

@cindex Ballon
@cindex Blase
@cindex Erklärungsblase
@cindex Notation, Erklärungen
@cindex Anmerkung, Blase
@cindex Hilfe, Blase
@cindex Textblasen
@funindex \balloonGrobText
@funindex \balloonText
@funindex Balloon_engraver
@funindex balloonGrobText
@funindex balloonText
@funindex balloonLengthOn
@funindex balloonLengthOff
@funindex \balloonLengthOn
@funindex \balloonLengthOff


Notationselemente können bezeichnet und markiert werden, indem um sie eine
rechteckige Blase gezeichnet wird.  Dies ist vor allem dazu da, Notation
zu erklären.

@lilypond[verbatim,quote,relative=2]
\new Voice \with { \consists "Balloon_engraver" }
{
  \balloonGrobText #'Stem #'(3 . 4) \markup { "I'm a Stem" }
  a8
  \balloonGrobText #'Rest #'(-4 . -4) \markup { "I'm a rest" }
  r
  <c, g'-\balloonText #'(-2 . -2) \markup { "I'm a note head" } c>2.
}
@end lilypond

Es gibt zwei Funktionen, @code{balloonGrobText} und
@code{balloonText}; die erste wird auf gleiche Art wie ein
@w{@code{\once \override}} eingesetzt umd Text an einen Grob zu
hängen, die zweite funktioniert wie ein @code{\tweak} und
wird üblicherweise innerhalb von Akkorden eingesetzt, um Text
an einzelne Noten zu hängen.

Textblasen beeinflussen normalerweise die Positionierung der Notation,
aber das kann geändert werden.

@lilypond[verbatim,quote,relative=2]
\new Voice \with { \consists "Balloon_engraver" }
{
  \balloonLengthOff
  \balloonGrobText #'Stem #'(3 . 4) \markup { "I'm a Stem" }
  a8
  \balloonGrobText #'Rest #'(-4 . -4) \markup { "I'm a rest" }
  r
  \balloonLengthOn
  <c, g'-\balloonText #'(-2 . -2) \markup { "I'm a note head" } c>2.
}
@end lilypond


@predefined
@code{\balloonLengthOn},
@code{\balloonLengthOff}.
@endpredefined

@seealso
Schnipsel:
@rlsr{Editorial annotations}.

Referenz der Interna:
@rinternals{Balloon_engraver},
@rinternals{BalloonTextItem},
@rinternals{balloon-interface}.


@node Gitternetzlinien
@unnumberedsubsubsec Gitternetzlinien
@translationof Grid lines

@cindex Gitterlinien
@cindex Linien, Gitter
@cindex vertikale Linien zwischen Systemen
@cindex Linien zwischen Systemen
@funindex Grid_point_engraver
@funindex Grid_line_span_engraver
@funindex gridInterval

Vertikale Linien können zwischen Systemen gesetzt werden, die mit den
Noten synchronisiert sind.

Der @code{Grid_point_engraver} muss benutzt werden, um die Endpunkte
der Linien zu definieren, und der @code{Grid_line_span_engraver} wird
benutzt, um dann die Linien zu setzen.  Der Standard ist, dass die
Gitterlinien unter den Noten und zur linken Seite des Notenkopfes
gesetzt werden.  Sie reichen von der Mitte eines Systems bis zur
Mitte des anderen.  Mit @code{gridInterval} wird die Dauer zwischen
den Linien festgesetzt.

@lilypond[verbatim,quote]
\layout {
  \context {
    \Staff
    \consists "Grid_point_engraver"
    gridInterval = #(ly:make-moment 1 4)
  }
  \context {
    \Score
    \consists "Grid_line_span_engraver"
  }
}

\score {
  \new ChoirStaff <<
    \new Staff \relative c'' {
      \stemUp
      c4. d8 e8 f g4
    }
    \new Staff \relative c {
      \clef bass
      \stemDown
      c4 g' f e
    }
  >>
}
@end lilypond

@snippets

@lilypondfile[verbatim,quote,ragged-right,texidoc,doctitle]
{grid-lines--changing-their-appearance.ly}


@seealso
Schnipsel:
@rlsr{Editorial annotations}.

Referenz der Interna:
@rinternals{Grid_line_span_engraver},
@rinternals{Grid_point_engraver},
@rinternals{GridLine},
@rinternals{GridPoint},
@rinternals{grid-line-interface},
@rinternals{grid-point-interface}.


@node Analyseklammern
@unnumberedsubsubsec Analyseklammern
@translationof Analysis brackets

@cindex Klammern
@cindex Phrasierungsklammern
@cindex Klammern, Analyse
@cindex Analyse
@cindex musikwissenschaftliche Analyse
@cindex Notengruppenklammer
@cindex horizontale Klammer
@cindex Musikanalyse
@funindex Horizontal_bracket_engraver
@funindex \startGroup
@funindex startGroup
@funindex \stopGroup
@funindex stopGroup

Klammern über dem System werden in der Musikanalyse benutzt, um
strukturelle Einheiten der Musik zu markieren.  Einfache
horizontale Klammern werden von LilyPond unterstützt.

@lilypond[verbatim,quote]
\layout {
  \context {
    \Voice
    \consists "Horizontal_bracket_engraver"
  }
}
\relative c'' {
  c2\startGroup
  d\stopGroup
}
@end lilypond

Analyseklammern können verschachtelt sein.

@lilypond[verbatim,quote]
\layout {
  \context {
    \Voice
    \consists "Horizontal_bracket_engraver"
  }
}
\relative c'' {
  c4\startGroup\startGroup
  d4\stopGroup
  e4\startGroup
  d4\stopGroup\stopGroup
}
@end lilypond

@seealso
Schnipsel:
@rlsr{Editorial annotations}.

Referenz der Interna:
@rinternals{Horizontal_bracket_engraver},
@rinternals{HorizontalBracket},
@rinternals{horizontal-bracket-interface},
@rinternals{Staff}.

